# Generated by Django 5.0.3 on 2024-05-22 16:06

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('galv', '0028_localstoragequota'),
    ]

    operations = [
        migrations.CreateModel(
            name='StorageType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('name', models.TextField(blank=True, null=True)),
                ('enabled', models.BooleanField(default=True, help_text='Whether this storage type is enabled for writing to')),
                ('quota', models.BigIntegerField(help_text='Maximum storage capacity in bytes')),
                ('priority', models.SmallIntegerField(default=0, help_text='Priority for storage allocation. Higher values are higher priority.')),
            ],
        ),
        migrations.RemoveField(
            model_name='lab',
            name='s3_access_key',
        ),
        migrations.RemoveField(
            model_name='lab',
            name='s3_bucket_name',
        ),
        migrations.RemoveField(
            model_name='lab',
            name='s3_custom_domain',
        ),
        migrations.RemoveField(
            model_name='lab',
            name='s3_location',
        ),
        migrations.RemoveField(
            model_name='lab',
            name='s3_secret_key',
        ),
        migrations.RemoveField(
            model_name='observedfile',
            name='storage_class_name',
        ),
        migrations.RemoveField(
            model_name='parquetpartition',
            name='storage_class_name',
        ),
        migrations.CreateModel(
            name='AdditionalS3StorageType',
            fields=[
                ('storagetype_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='galv.storagetype')),
                ('bucket_name', models.TextField(blank=True, help_text='Name of the S3 bucket to store files in', null=True)),
                ('location', models.TextField(blank=True, help_text='Directory within the S3 bucket to store files in', null=True)),
                ('access_key', models.TextField(blank=True, help_text='Access key for the S3 bucket', null=True)),
                ('secret_key', models.TextField(blank=True, help_text='Secret key for the S3 bucket', null=True)),
                ('custom_domain', models.TextField(blank=True, help_text='Custom domain for the S3 bucket.', null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('galv.storagetype',),
        ),
        migrations.CreateModel(
            name='GalvStorageType',
            fields=[
                ('storagetype_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='galv.storagetype')),
            ],
            options={
                'abstract': False,
            },
            bases=('galv.storagetype',),
        ),
        migrations.AddField(
            model_name='storagetype',
            name='lab',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='storage_%(class)s', to='galv.lab'),
        ),
        migrations.AddField(
            model_name='observedfile',
            name='storage_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pngs', to='galv.storagetype'),
        ),
        migrations.AddField(
            model_name='parquetpartition',
            name='storage_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='parquet_partitions', to='galv.storagetype'),
        ),
        migrations.DeleteModel(
            name='LocalStorageQuota',
        ),
        migrations.AlterUniqueTogether(
            name='storagetype',
            unique_together={('lab', 'priority')},
        ),
    ]
