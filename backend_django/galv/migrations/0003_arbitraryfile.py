# Generated by Django 5.0.2 on 2024-02-27 16:27

import django.db.models.deletion
import django_json_field_schema_validator.validators
import galv.models.utils
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('galv', '0002_alter_cell_custom_properties_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='ArbitraryFile',
            fields=[
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('uuid', galv.models.utils.UUIDFieldLD(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('custom_properties', models.JSONField(default=dict, validators=[django_json_field_schema_validator.validators.JSONFieldSchemaValidator({'$defs': {'typedArray': {'additionalProperties': False, 'properties': {'_type': {'const': 'array'}, '_value': {'$comment': 'Array items are objects with _type and _value fields only, so each item in the array is individually typed.', 'items': {'$ref': '#/$defs/typedObjectProperty'}, 'type': 'array'}}, 'required': ['_type', '_value'], 'type': 'object'}, 'typedBoolean': {'additionalProperties': False, 'properties': {'_type': {'const': 'boolean'}, '_value': {'type': 'boolean'}}, 'required': ['_type', '_value'], 'type': 'object'}, 'typedNull': {'additionalProperties': False, 'properties': {'_type': {'const': 'null'}, '_value': {'type': 'null'}}, 'required': ['_type', '_value'], 'type': 'object'}, 'typedNumber': {'additionalProperties': False, 'properties': {'_type': {'const': 'number'}, '_value': {'type': 'number'}}, 'required': ['_type', '_value'], 'type': 'object'}, 'typedObject': {'additionalProperties': False, 'properties': {'_type': {'const': 'object'}, '_value': {'$ref': '#'}}, 'required': ['_type', '_value'], 'type': 'object'}, 'typedObjectProperty': {'$comment': 'typedObjectProperty is either a known JSON type or a custom one. In either case, it is an object with _type and _value fields only. Different typed* types are used to enforce the correct _value type for each _type.', 'anyOf': [{'$ref': '#/$defs/typedString'}, {'$ref': '#/$defs/typedNumber'}, {'$ref': '#/$defs/typedBoolean'}, {'$ref': '#/$defs/typedNull'}, {'$ref': '#/$defs/typedObject'}, {'$ref': '#/$defs/typedArray'}, {'$ref': '#/$defs/typedUnknown'}]}, 'typedString': {'additionalProperties': False, 'properties': {'_type': {'const': 'string'}, '_value': {'type': 'string'}}, 'required': ['_type', '_value'], 'type': 'object'}, 'typedUnknown': {'$comment': "Custom types can be signified by using anything for _type that doesn't match the core JSON types. The _value can be any JSON primitive, an object with properties that are objects with _type and _value, or an array of objects with _type and _value.", 'additionalProperties': False, 'properties': {'_type': {'type': 'string'}, '_value': {'anyOf': [{'$ref': '#/$defs/typedObjectProperty'}, {'$ref': '#'}, {'type': ['string', 'number', 'boolean', 'null']}]}}, 'required': ['_type', '_value'], 'type': 'object'}}, '$schema': 'https://json-schema.org/draft/2020-12/schema#', 'additionalProperties': {'$ref': '#/$defs/typedObjectProperty'}, 'description': "JSON schema for Galv typed JSON. All items are objects with a _type and _value field only. The _type will be one of the core JSON data types, or a custom string. If _type is a core JSON primitive, _value must have that type. If _type is 'array', then the contents must be items with _type and _value fields. If _type is 'object', then _value must be a JSON object with _type and _value fields. If _type is 'object', _value will be an object with each property value being an object with _type and _value fields. If _type is a custom string, _value can be any JSON primitive, an object with properties that are objects with _type and _value, or an array of objects with _type and _value.", 'title': 'Galv typed JSON - strict', 'type': 'object'})])),
                ('delete_access_level', models.IntegerField(choices=[(4, 'Team Admin'), (3, 'Team Member')], default=3)),
                ('edit_access_level', models.IntegerField(choices=[(4, 'Team Admin'), (3, 'Team Member'), (2, 'Lab Member'), (1, 'Registered User')], default=3)),
                ('read_access_level', models.IntegerField(choices=[(4, 'Team Admin'), (3, 'Team Member'), (2, 'Lab Member'), (1, 'Registered User'), (0, 'Anonymous')], default=2)),
                ('file', models.FileField(help_text='The file', upload_to='')),
                ('name', models.TextField(help_text='The name of the file')),
                ('description', models.TextField(blank=True, help_text='The description of the file', null=True)),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_resources', to='galv.team')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
