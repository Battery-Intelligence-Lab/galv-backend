name: CI Tests
on:
  push:
  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description: 'Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)'
        required: false
        default: false
      issue_release:
        type: boolean
        description: 'Issue a release'
        required: false
        default: false
      dry_release_run:
        type: boolean
        description: 'Do not actually release the package, just check that it is valid.'
        required: false
        default: false
      skip_compatibility_check:
        type: boolean
        description: 'Skip API compatibility check. WARNING: this will allow breaking changes to the API to be released.'
        required: false
        default: false

jobs:
  version:
    uses: ./.github/workflows/get-version.yml
    secrets: inherit

  run-tests:
    runs-on: ubuntu-latest
    outputs:
      release: ${{ steps.check-tag.outputs.match }}
    steps:
      - uses: actions/checkout@v3
      # Enable tmate debugging of manually-triggered workflows if the input option was provided
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.debug_enabled }}

      - name: Setup docker-compose
        run: |
            sudo apt-get update
            sudo apt-get install -y docker-compose

      - name: Build container
        run: docker-compose build app_test

      - name: Run tests
        run: docker-compose run --rm app_test

      - name: Validate spec
        run: |
          docker-compose run --rm app_test bash -c "python manage.py spectacular --fail-on-warn --validate"

      - name: Check if tagged release is required
        if: ${{ github.event_name != 'workflow_dispatch' }}
        id: check-tag
        run: |
          if [[ ${{ github.event.ref }} =~ ^refs/tags/v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
              echo "match=true" >> $GITHUB_OUTPUT
          fi

  release:
    needs:
      - run-tests
      - version
    if: ${{ needs.run-tests.outputs.release == 'true' || needs.version.outputs.unpublished_version == 'true' || (github.event_name == 'workflow_dispatch' && (github.event.inputs.issue_release || github.event.inputs.dry_release_run)) }}
    uses: ./.github/workflows/issue-release.yml
    secrets: inherit
    with:
      debug_enabled: ${{ github.event_name == 'workflow_dispatch' && inputs.debug_enabled }}
      skip_compatibility_check: ${{ github.event_name == 'workflow_dispatch' && inputs.skip_compatibility_check }}
      dry_run: ${{ needs.run-tests.outputs.unpublished_version == 'true' || (github.event_name == 'workflow_dispatch' && inputs.dry_release_run) }}

  debug-release:
    runs-on: ubuntu-latest
    needs:
      - run-tests
      - version
    steps:
      - name: Debug release
        env:
          RELEASE: ${{ needs.run-tests.outputs.release }}
          UNPUBLISHED_VERSION: ${{ needs.version.outputs.unpublished_version }}
          ISSUE_RELEASE: ${{ github.event.inputs.issue_release }}
          ISSUE_RELEASE_NATIVE: ${{ inputs.issue_release }}
          EVENT_NAME: ${{ github.event_name }}
        run: |
          echo "release: ${{ needs.run-tests.outputs.release }}"
          echo "env release: ${{ env.RELEASE }}"
          echo "unpublished_version: ${{ needs.version.outputs.unpublished_version }}"
          echo "env unpublished_version: ${{ env.UNPUBLISHED_VERSION }}"
          echo "issue_release [event]: ${{ github.event.inputs.issue_release }}"
          echo "env issue_release [event]: ${{ env.ISSUE_RELEASE }}"
          echo "issue_release [native]: ${{ inputs.issue_release }}"
          echo "env issue_release [native]: ${{ env.ISSUE_RELEASE_NATIVE }}"
          echo "github.event_name: ${{ github.event_name }}"
          echo "env github.event_name: ${{ env.EVENT_NAME }}"
          env