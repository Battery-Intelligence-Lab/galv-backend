name: CI Tests
on:
  push:
  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description: 'Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)'
        required: false
        default: false
      issue_release:
        type: boolean
        description: 'Issue a release'
        required: false
        default: false
      dry_release_run:
        type: boolean
        description: 'Do not actually release the package, just check that it is valid.'
        required: false
        default: false
      skip_compatibility_check:
        type: boolean
        description: 'Skip API compatibility check. WARNING: this will allow breaking changes to the API to be released.'
        required: false
        default: false

jobs:
  version:
    uses: ./.github/workflows/get-version.yml
    secrets: inherit

  run-tests:
    runs-on: ubuntu-latest
    outputs:
      release: ${{ steps.check-tag.outputs.match }}
    steps:
      - uses: actions/checkout@v3
      # Enable tmate debugging of manually-triggered workflows if the input option was provided
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.debug_enabled }}

      - name: Setup docker-compose
        run: |
            sudo apt-get update
            sudo apt-get install -y docker-compose

      - name: Build container
        run: docker-compose build app_test

      - name: Run tests
        run: docker-compose run --rm app_test

      - name: Validate spec
        run: |
          docker-compose run --rm app_test bash -c "python manage.py spectacular --fail-on-warn --validate"

  check-release-type:
    runs-on: ubuntu-latest
    outputs:
      release: ${{ steps.check-tag.outputs.release }}
      dry-run: ${{ steps.check-tag.outputs.dry }}
    needs:
      - version
    steps:
      - name: Dump context
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            
            await core.group(`GitHub needs`, async () => {
              core.info(JSON.stringify(JSON.parse(`${process.env.NEEDS}`), null, 2));
            });
        env:
          NEEDS: ${{ toJson(needs) }}

      - name: Debug needs
        run: |
          echo "needs.version.outputs.untagged-release=${{ needs.version.outputs.untagged-release }}"
      - name: Check if tagged release is required
        id: check-tag
        run: |
          DRY_RUN=false
          RELEASE=false
          # Determine release based on whether:
          # 1. We're in a workflow_dispatch event and the inputs.issue_release flag is true
          # 2. We're in a workflow_dispatch event and the inputs.dry_release_run flag is true
          # 3. We're on a tag and the tag is a semver tag
          # 4. We're on a branch and we have an unpublished version
          if [[ ${{ github.event_name }} == 'workflow_dispatch' && "${{ github.event.inputs.issue_release }}" == "true" ]]; then
              RELEASE=true
          elif [[ ${{ github.event_name }} == 'workflow_dispatch' && "${{ github.event.inputs.dry_release_run }}" == "true" ]]; then
              DRY_RUN=true
              RELEASE=true  # requesting dry-run implies requesting release
          elif [[ ${{ github.event_name }} == 'push' && $(echo "${{ github.ref }}" | grep -qE "^refs/tags/v[0-9]+\.[0-9]+\.[0-9]+$") ]]; then
              RELEASE=true
          elif [[ ${{ github.event_name }} == 'push' && "${{ needs.version.outputs.untagged-release }}" == "true" ]]; then
              RELEASE=true
              DRY_RUN=true
          fi
          echo "release=$RELEASE" >> $GITHUB_OUTPUT
          echo "dry-run=$DRY_RUN" >> $GITHUB_OUTPUT
          cat $GITHUB_OUTPUT
      - name: Debug with tmate
        if: ${{ failure() }}
        uses: mxschmitt/action-tmate@v3

  release:
    needs:
      - run-tests
      - check-release-type
    if: needs.check-release-type.outputs.release == 'true'
    uses: ./.github/workflows/issue-release.yml
    secrets: inherit
    with:
      debug_enabled: ${{ github.event_name == 'workflow_dispatch' && inputs.debug_enabled }}
      skip_compatibility_check: ${{ github.event_name == 'workflow_dispatch' && inputs.skip_compatibility_check }}
      dry-run: ${{ needs.check-release-type.outputs.dry-run == 'true' }}
