name: OpenAPI spec compatibility
on:
  workflow_call:
    inputs:
      debug_enabled:
        type: boolean
        description: 'Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)'
        required: false
        default: false
  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description: 'Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)'
        required: false
        default: false
      skip_match_check:
        type: boolean
        description: 'Skip checking that the release version matches the branch name.'
        required: false
        default: false

jobs:
  version:
    uses: Battery-Intelligence-Lab/galv-backend/.github/workflows/get-version.yml@main
    secrets: inherit

  check:
    if: ${{ github.event.workflow_run.conclusion == 'success' }} || ${{ github.event_name == 'workflow_dispatch' }}
    needs: version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # Enable tmate debugging of manually-triggered workflows if the input option was provided
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: ${{ inputs.debug_enabled }}

      - name: Check version matches ref
        if: ${{ github.event_name != 'workflow_dispatch' || !inputs.skip_match_check }}
        run: |
          # Assert that the release version matches the branch name
          if [ "${{ needs.version.outputs.version }}" != "${{ github.ref_name }}" ]; then
              echo "Release version ${{ needs.version.outputs.version }} does not match version in tag name ${{ github.ref_name }}"
              exit 1
          fi

      - name: Setup docker-compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose
          mkdir -p .dev/spec
          sudo chmod 777 .dev/spec

      - name: Generate spec
        run: |
          # using x rather than a number means it appears later and gets picked up by `tail -n 1` in check_spec
          docker-compose run --rm app bash -c "python manage.py spectacular --format openapi-json >> /spec/openapi-x.json"
          # Copy spec for upload
          cp .dev/spec/openapi-x.json .dev/spec/openapi-${{ needs.version.outputs.version }}.json

      - name: Run spec check vs prev version
        if: ${{ needs.version.outputs.prev_version != '' && !needs.version.outputs.is_major_release }}
        run: |
          sudo chmod 777 .dev/spec/*
          wget -O .dev/spec/openapi-${{ needs.version.outputs.prev_version }}.json https://raw.githubusercontent.com/Battery-Intelligence-Lab/galv-backend/release/${{ needs.version.outputs.prev_version }}/schema.json
          docker-compose run --rm -e REMOTE_SPEC_SOURCE=.dev/spec/openapi-${{ needs.version.outputs.prev_version }}.json check_spec

      - name: Upload spec
        uses: actions/upload-artifact@v4
        with:
          name: spec
          path: .dev/spec/openapi-${{ needs.version.outputs.version }}.json
          retention-days: 1

  make-clients:
    needs: check
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - uses: actions/checkout@v3

      - name: Make clients directory
        run: |
          mkdir clients

      - name: Retrieve spec artifacts
        uses: actions/download-artifact@v4
        with:
          name: spec
          path: .dev/spec

      # Enable tmate debugging of manually-triggered workflows if the input option was provided
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: ${{ inputs.debug_enabled }}

      - name: Specify openapi-generator version
        run: docker pull openapitools/openapi-generator-cli:v6.6.0

      - name: Create API client - python
        run: |
          JSON_FILE=$(ls .dev/spec/*.json)
          docker run --rm -v "${PWD}:/local" openapitools/openapi-generator-cli:v6.6.0 generate \
          -i "/local/$JSON_FILE" \
          -g python \
          -o /local/clients/python
          
          # Copy LICENCE file to client directory
          sudo cp LICENCE clients/python/LICENCE
          
          # zip the client
          zip -r clients/galv-client-python.zip clients/python

      - name: Create API client - typescript-axios
        run: |
          JSON_FILE=$(ls .dev/spec/*.json)
          docker run --rm -v "${PWD}:/local" openapitools/openapi-generator-cli:v6.6.0 generate \
          -i "/local/$JSON_FILE" \
          -g typescript-axios \
          -o /local/clients/typescript-axios
          
          # Copy LICENCE file to client directory
          sudo cp LICENCE clients/typescript-axios/LICENCE
          
          # Create a package.json file using EOF notation
          cat << EOF | sudo tee -a clients/typescript-axios/package.json
          {
              "name": "galv-client-axios",
              "version": "${{ needs.version.outputs.version }}",
              "description": "Galv API client using Typescript-Axios",
              "main": "index.ts",
              "scripts": {
                "test": "echo \"Error: no test specified\" && exit 1"
              },
              "keywords": [
                "galv",
                "galv-api",
                "galv-client",
                "typescript-axios"
              ],
              "author": "Battery Intelligence Lab",
              "license": "See LICENCE File",
              "dependencies": {
                "axios": "^0.21.1"
              }
          }
          EOF
          
          # zip the client
          zip -r clients/galv-client-typescript-axios.zip clients/typescript-axios

      - name: Setup publishing typescript client to packages
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - run: npm ci
      - uses: JS-DevTools/npm-publish@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          registry: "https://npm.pkg.github.com"
          package: "clients/typescript-axios"

      - name: Upload clients
        uses: actions/upload-artifact@v4
        with:
          name: clients
          path: clients/*.zip
          retention-days: 1
