upstream django {
		server app:8000;  # app is the name of the Django container
}


server {
    listen       80;  # mapped to 8001 in docker-compose.yml
    listen  [::]:80;
    server_name  localhost;

    #access_log  /var/log/nginx/host.access.log  main;

		# data location should match the DATA_URL that Django is serving the data from.
		location /data/ {
				internal;
				alias /data/;
		}

		location / {
				proxy_http_version 1.1;
				proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
				proxy_set_header X-Forwarded-Proto \$scheme;
		    proxy_set_header X-Forwarded-Host \$host;
				proxy_set_header Host $http_host;
				proxy_set_header X-Real-IP \$remote_addr;
				proxy_set_header Upgrade \$http_upgrade;
		    proxy_set_header X-Request-Id \$pid-\$msec-\$remote_addr-\$request_length;
				proxy_set_header Connection "upgrade";
				proxy_pass http://django;
		    proxy_read_timeout 600;
		    proxy_send_timeout 600;
		}

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}
